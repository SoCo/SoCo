[build-system]
    requires = [
        "setuptools >= 61.2; python_version >= '3.7'",
        "setuptools == 58.2.0; python_version == '3.6'"
    ]
    build-backend = "setuptools.build_meta"

[project]
    name = "soco"
    description = "SoCo (Sonos Controller) is a simple library to control Sonos speakers."
    readme = "README.rst"
    classifiers = [
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: Implementation :: CPython",
        "Programming Language :: Python :: Implementation :: PyPy",
        "Topic :: Home Automation",
        "Topic :: Multimedia :: Sound/Audio",
        "Topic :: Multimedia :: Sound/Audio :: Players",
        "Topic :: Software Development :: Libraries :: Python Modules"
    ]
    requires-python = ">=3.6"
    dynamic = ["version", "dependencies"]

[[project.authors]]
    name = "The SoCo-Team"
    email = "python-soco@googlegroups.com"

[project.license]
    text = "MIT License"

[project.urls]
    Homepage = "https://github.com/SoCo/SoCo"

[project.optional-dependencies]
    events_asyncio = ["aiohttp"]
    testing = [
        "sphinx == 4.5.0",
        "sphinx_rtd_theme",
        "pytest >= 2.5",
        "graphviz",
        "flake8",
        "pylint",
        "coveralls",
        "pytest-cov<2.6.0",
        "wheel", "black >= 22.12.0; python_version >= \"3.7\"",
        "requests-mock",
        "twine",
        "importlib-metadata<5; python_version == \"3.7\""
    ]

[tool.setuptools]
    packages = ["soco", "soco.plugins", "soco.music_services"]
    include-package-data = false

[tool.setuptools.dynamic.version]
    attr = "soco.__init__.__version__"

[tool.setuptools.dynamic.dependencies]
    file = ["requirements.txt"]
